<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[简评《Ruby元编程》]]></title>
    <url>%2Fblog%2F2017%2F09%2F23%2F%E7%AE%80%E8%AF%84Ruby%E5%85%83%E7%BC%96%E7%A8%8B%2F</url>
    <content type="text"><![CDATA[Ruby是一门绝妙的编程语言，这种绝妙体现于三处： 一是Ruby自身充满魔幻色彩的语法(糖)； 二是博采众长的rails； 三是这本神奇的Ruby元编程。 每当别人让我推荐编程书的时候，我第一个想到的总是Ruby元编程，无论所学的编程语言是Python，是Ruby，或是JavaScript，这本书总是可以帮你扩宽思维，看到新的编程世界。 Ruby元编程值得每个程序员认真读一读， 不为Ruby而读，为你自己而读。 读这本书需要哪些前置条件？ 了解基本的Ruby语法，如果你不了解Ruby也没关系，有其他编程语言基础的情况下，这只需要额外占用一天的时间而已 有面向对象编程基础 喜欢探索新的知识 什么是元编程？抽象一点的，官方一点的说法就是 “可以编写代码的代码”， 通俗一点解释，就是一些能帮助你少写重复的，枯燥的代码的技巧。 掌握了元编程，编程就不再是 Programme，而是 Magic。 希望每个人在读完这本书后都能感悟到： 世上本没有元编程，只有编程。 读完这本书会获得什么？最明显的一点，读完这本书后，会发现很多业界大牛的代码也没那么难懂了。 也会感叹自己以前居然写了这么多愚蠢代码啊。 也会发现以前觉得如此晦涩的单继承多继承，Mixin这些OOP概念都忽然透彻了。 会觉得本以为深奥的DSL底层机制是如此的平易近人。 最重要的是：充满了黑魔法的编程变的有趣多了。 如何读好这本书？这本书分为两大部分： 1~6章以一个小故事为线索，细致的讲解了Ruby中常见的魔法。 每一章的例子和习题都值得反复思考，尝试一题多解，然后再往下看书中的讲解，对比自己的解法去改进代码。 7~8章通过讲解ActiveRecord这个复杂的ORM的原理，把前面6章的知识点串起来，织丝成网，这部分难度逐步提高，阅读速度会明显变慢，需要反复写代码去巩固前面学的基础。 9~附录讲解Ruby常见的错误点，常见的Magic总结，用来事后查阅。 阅读这本书，应该重点关注Ruby的面向对象思想和Ruby中的作用域。 Ruby的面向对象是非常特殊的，以至于和其他常见的OOP语言差距巨大，读书的时候应该重点注意这之中的差异。 后话Ruby元编程虽然行文流畅，内容深刻，但是还是存在一些缺陷的。 比如难度梯度不均匀，部分内容的实例代码晦涩难懂，不过总体来说是一本值得用心刷完一遍甚至两遍的书。 受篇幅限制，这本书很多地方只是点到为止，深层次的原理并没有写出来，如果读完这本书后，对元编程的原理仍有很大的探索欲望，可以试着读一读《计算机程序的构造和解释》 最后，祝大家都能在书中学到自己喜欢的Magic。]]></content>
      <categories>
        <category>读书笔记</category>
      </categories>
      <tags>
        <tag>Ruby</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo 搭建教程]]></title>
    <url>%2Fblog%2F2017%2F09%2F23%2Fhexo-website-start%2F</url>
    <content type="text"><![CDATA[因自有服务器到期，于是把博客转移到gitpage托管，毕竟免费，一年可以少花几百块钱 本博客用Hexo搭建，主题是Next 曾搭建过WordPress， dz等动态博客， 也试过Jekyll等静态博客 总体来说还是Hexo流程更简单一些，更易于自定义与维护，也能让人更安心写作，而不去鼓捣杂七杂八的插件 注意： 以下教程基于Hexo v3.3.9 Step1 安装必要的软件包 安装Hexo 1$ sudo npm install -g hexo 安装部署到GitHub的工具 1$ npm install hexo-deployer-git --save Step2 初始化与设置 Hexo初始化 123$ mkdir blog$ cd blog$ hexo init 建立Git仓库 在GitHub先创建一个repo， 名称任意1234$ git init$ git remote add origin &lt;你的GitHub仓库地址&gt;$ git add .$ git push origin master -f 修改部署配置项 在你当前目录下找到_config.yml文件，编辑器打开 修改以下配置项 1234567url: &lt;你的GitHub用户名&gt;.github.io/&lt;博客项目仓库名&gt;root: /&lt;博客项目仓库名&gt;/deploy: type: git branch: gh-pages repo: &lt;你的GitHub仓库地址&gt; 部署静态博客 12$ hexo g$ hexo d 至此博客基本部署完毕， 打开&lt;你的GitHub用户名&gt;.github.io/&lt;博客项目仓库名&gt;这个网址即可访问刚建好的博客了 Step3 个性化配置 修改博客主题 hexo的默认主题是landscape，界面简单但也没什么特色 hexo更换主题非常容易，想知道当前都有哪些漂亮的主题，可以到hexo的官网挑选 主题文件下载至themes文件夹下即可，以我使用的next主题为例： 1$ git clone https://github.com/iissnan/hexo-theme-next themes/next 然后需要修改博客目录下的_config.yml文件 1theme: next 然后需要重新部署，以后每次更新文章、配置、主题都需要按以下步骤部署 123$ hexo clean #这一步可以省略，但是容易出现样式不对的小问题$ hexo g$ hexo d 修改配色方案，文本布局，字体图标等UI调整都是在主题文件夹下的_config.yml文件里改动，具体的参数规则参考主题的官方文档，这里不再赘述]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
</search>
